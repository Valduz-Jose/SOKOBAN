#include <stdio.h>
#include <stdlib.h>
#include <windows.h>

#define iz 75
#define de 77
#define ar 72
#define ab 80
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
typedef struct datos{
	int mov;
	char name[40];
};
void imp_map_one(int matriz[11][19]);
void imp_map_two(int matrizz[10][14]);
void imp_map_tre(int matrizzz[12][13]);
int main(int argc, char *argv[]) {
	int map_one[11][19]={
	{177,177,177,177,178,178,178,178,178,177,177,177,177,177,177,177,177,177,177},
	{177,177,177,177,178,176,176,176,178,177,177,177,177,177,177,177,177,177,177},
	{177,177,177,177,178,176,176,176,178,177,177,177,177,177,177,177,177,177,177},
	{177,177,178,178,178,176,176,176,178,178,177,177,177,177,177,177,177,177,177},
	{177,177,178,176,176,176,176,176,176,178,177,177,177,177,177,177,177,177,177},
	{178,178,178,176,178,176,178,178,176,178,177,177,177,178,178,178,178,178,178},
	{178,176,176,176,178,176,178,178,176,178,178,178,178,178,176,176,167,167,178},
	{178,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,167,167,178},
	{178,178,178,178,178,176,178,178,178,176,178,176,178,178,176,176,167,167,178},
	{177,177,177,177,178,176,176,176,176,176,178,178,178,178,178,178,178,178,178},
	{177,177,177,177,178,178,178,178,178,178,178,177,177,177,177,177,177,177,177}
	};
	
	int map_two[10][14]={
	{178,178,178,178,178,178,178,178,178,178,178,178,177,177},
	{178,167,167,176,176,178,176,176,176,176,176,178,178,178},
	{178,167,167,176,176,178,176,176,176,176,176,176,176,178},
	{178,167,167,176,176,178,176,178,178,178,178,176,176,178},
	{178,167,167,176,176,176,176,176,176,178,178,176,176,178},
	{178,167,167,176,176,178,176,178,176,176,178,176,178,178},
	{178,178,178,178,178,178,176,178,178,176,176,176,176,178},
	{177,177,178,176,176,176,176,176,176,176,176,176,176,178},
	{177,177,178,176,176,176,176,178,176,176,176,176,176,178},
	{177,177,178,178,178,178,178,178,178,178,178,178,178,178},
	};
	
	int map_tre[12][13]={
	{177,177,177,177,177,177,177,178,178,178,178,178,177},
	{177,178,178,178,178,178,178,178,176,176,176,178,178},
	{178,178,176,178,176,178,178,178,176,176,176,176,178},
	{178,176,176,176,176,176,176,176,176,176,176,176,178},
	{178,176,176,176,176,178,178,178,178,176,176,176,178},
	{178,178,178,176,178,178,178,178,178,176,178,178,178},
	{178,176,176,176,176,178,178,178,176,176,167,167,178},
	{178,176,178,176,176,176,176,176,167,167,167,167,178},
	{178,176,176,176,176,178,178,178,167,167,167,167,178},
	{178,176,176,176,176,178,177,178,167,167,167,167,178},
	{178,176,176,178,178,178,177,178,178,178,178,178,178},
	{178,178,178,178,177,177,177,177,177,177,177,177,177},
	};
	
struct datos a1;
a1.mov=0;
int c,fi,co,c1,c11,c2,c22,c3,c33,c4,c44,c5,c55,c6,c66;
c1=7,c11=2,c2=2,c22=5,c3=4,c33=5,c4=7,c44=5,c5=3,c55=7,c6=4,c66=7;
fi=8,co=12;
char tecla;
c=0;
color(14);
printf("\t\t\t\t\tSOKOBAN");
color(15);
printf("\n\n\t\tNombre:");
scanf("%s",&a1.name);
printf("\n\n\t\t\t\tEmpezemos %s\n\n\t",a1.name);
system("PAUSE");
system("cls");
map_one[fi][co]=2;
while(c==0){
	color(14);
	printf("\t\t\t\t\tSOKOBAN");
	color(15);
	printf("\n\n\tJugador: %s \t\t\t\t\tMovimientos: %d",a1.name,a1.mov);
	map_one[c1][c11]=219;
	map_one[c2][c22]=219;
	map_one[c3][c33]=219;
	map_one[c4][c44]=219;
	map_one[c5][c55]=219;
	map_one[c6][c66]=219;
	map_one[fi][co]=2;
	imp_map_one(map_one);
	map_one[c1][c11]=176;
	map_one[c2][c22]=176;
	map_one[c3][c33]=176;
	map_one[c4][c44]=176;
	map_one[c5][c55]=176;
	map_one[c6][c66]=176;
	map_one[fi][co]=176;
	if((map_one[fi+1][co]==167)||(map_one[fi-1][co]==167)||(map_one[fi][co-1]==167)){
		map_one[fi][co]=167;
	}
	tecla=getch();
	if(tecla==ar){
		if(map_one[fi-1][co]!=178){
			if(fi-1==c1&&co==c11){
			if(map_one[c1-1][c11]!=178){
				c1--;
			}
				
		}
		if(fi-1==c2&&co==c22){
			if(map_one[c2-1][c22]!=178){
				c2--;
			}
		}
		if(fi-1==c3&&co==c33){
			if(map_one[c3-1][c33]!=178){
				c3--;
			}
		}
		if(fi-1==c4&&co==c44){
			if(map_one[c4-1][c44]!=178){
				c4--;
			}
		}
		if(fi-1==c5&&co==c55){
			if(map_one[c5-1][c55]!=178){
				c5--;
			}
		}
		if(fi-1==c6&&co==c66){
			if(map_one[c6-1][c66]!=178){
				c6--;
			}
		}
		fi--;		
		}
	}
	if(tecla==ab){
		if(map_one[fi+1][co]!=178){
			if(fi+1==c1&&co==c11){
			if(map_one[c1+1][c11]!=178){
				c1++;
			}
				
		}
		if(fi+1==c2&&co==c22){
			if(map_one[c2+1][c22]!=178){
				c2++;
			}
		}
		if(fi+1==c3&&co==c33){
			if(map_one[c3+1][c33]!=178){
				c3++;
			}
		}
		if(fi+1==c4&&co==c44){
			if(map_one[c4+1][c44]!=178){
				c4++;
			}
		}
		if(fi+1==c5&&co==c55){
			if(map_one[c5+1][c55]!=178){
				c5++;
			}
		}
		if(fi+1==c6&&co==c66){
			if(map_one[c6+1][c66]!=178){
				c6++;
			}
		}
		fi++;
		}
	}
	if(tecla==iz){
		if(map_one[fi][co-1]!=178){
			if(fi==c1&&co-1==c11){
			if(map_one[c1][c11-1]!=178){
				c11--;
			}
				
		}
		if(fi==c2&&co-1==c22){
			if(map_one[c2][c22-1]!=178){
				c22--;
			}
		}
		if(fi==c3&&co-1==c33){
			if(map_one[c3][c33-1]!=178){
				c33--;
			}
		}
		if(fi==c4&&co-1==c44){
			if(map_one[c4][c44-1]!=178){
				c44--;
			}
		}
		if(fi==c5&&co-1==c55){
			if(map_one[c5][c55-1]!=178){
				c55--;
			}
		}
		if(fi==c6&&co-1==c66){
			if(map_one[c6][c66-1]!=178){
				c66--;
			}
		}
		co--;
		}
	}
	if(tecla==de){
		if(map_one[fi][co+1]!=178){
		if(fi==c1&&co+1==c11){
			if(map_one[c1][c11+1]!=178){
				c11++;
			}
				
		}
		if(fi==c2&&co+1==c22){
			if(map_one[c2][c22+1]!=178){
				c22++;
			}
		}
		if(fi==c3&&co+1==c33){
			if(map_one[c3][c33+1]!=178){
				c33++;
			}
		}
		if(fi==c4&&co+1==c44){
			if(map_one[c4][c44+1]!=178){
				c44++;
			}
		}
		if(fi==c5&&co+1==c55){
			if(map_one[c5][c55+1]!=178){
				c55++;
			}
		}
		if(fi==c6&&co+1==c66){
			if(map_one[c6][c66+1]!=178){
				c66++;
			}
		}
		co++;
		}
	}	
system("cls");
}
	
	
/*	printf("\n");
	imp_map_two(map_two);
	printf("\n");
	imp_map_tre(map_tre);*/
	return 0;
}
void imp_map_one(int matriz[11][19]){
	int q,w;
	color(7);
	for(q=0;q<11;q++){
		printf("\n");
		printf("\t\t\t\t");
		for(w=0;w<19;w++){
			printf("%c",matriz[q][w]);
		}
	}
}
void imp_map_two(int matrizz[10][14]){
	int e,r;
	for(e=0;e<10;e++){
		printf("\n");
		for(r=0;r<14;r++){
			printf("%c",matrizz[e][r]);
		}
	}
}
void imp_map_tre(int matrizzz[12][13]){
	int t,y;
	for(t=0;t<12;t++){
		printf("\n");
		for(y=0;y<13;y++){
			printf("%c",matrizzz[t][y]);
		}
	}
}
void  color(int c){

	HANDLE consol;
	consol = GetStdHandle
		(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute
		(consol, c);
}